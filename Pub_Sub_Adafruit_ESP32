/**********************/
/*              PONTIFICIA UNIVERSIDAD JAVERIANA              */
/*       TRABAJO DE GRADO DANIEL FELIPE NIÑO MANCHEGO         */
/*  SISTEMA PARA MONITOREO DE CONFORT Y GESTIÓN ENERGÉTICA    */
/*       DE LA ILUMINACIÓN CON DETECCIÓN ESTACIONAIA          */
/**********************/
#include "WiFi.h"
#include "Adafruit_MQTT.h"
#include "Adafruit_MQTT_Client.h"

#define WIFI_SSID       "BOY"
#define WIFI_PASS       "26031609"
#define AIO_SERVER      "io.adafruit.com"
#define AIO_SERVERPORT  1883
#define AIO_USERNAME     "Dafenima97"
#define AIO_KEY          "aio_mwoy48NAkNr5DrEnDtypH2iqxz4B"
WiFiClient client;
// Setup the MQTT client class by passing in the WiFi client and MQTT server and login details.
Adafruit_MQTT_Client mqtt(&client, AIO_SERVER, AIO_SERVERPORT, AIO_USERNAME, AIO_KEY);
Adafruit_MQTT_Publish Temperatura = Adafruit_MQTT_Publish(&mqtt, AIO_USERNAME "/feeds/Temperatura");
Adafruit_MQTT_Publish Humedad = Adafruit_MQTT_Publish(&mqtt, AIO_USERNAME "/feeds/Humedad");

Adafruit_MQTT_Subscribe DimMode = Adafruit_MQTT_Subscribe(&mqtt, AIO_USERNAME "/feeds/DimMode", MQTT_QOS_1);
Adafruit_MQTT_Subscribe ControlNivelLuz = Adafruit_MQTT_Subscribe(&mqtt, AIO_USERNAME "/feeds/ControlNivelLuz", MQTT_QOS_1);

int pinDHT11 = 0;
int  MonitorSerial = 9600;
int temp[] = {41,57,-1,56,17,55,24,33,45,15,60,37,1,25,57,58,35,51,17,33,17,51,54,58,13,59,17,20,58,23,46,50,55,11,28,27,28,-3};
int hum[] = {58,56,52,52,53,52,53,55,57,54,57,56,58,55,54,55,54,54,53,54,57,56,54,54,57,55,52,55,56,57,54,52,53,57,57,57,55,55};
int pos = 0;
int k = 0;

/**********************/ 
void Modo(char *data, uint16_t len) {
  Serial.print("Valor rebido del boton: ");Serial.println(data);
  String mensaje = String(data);
  Serial.print(mensaje);
}

void Nivel(char *data, uint16_t len) {
  Serial.print("Valor rebido del boton: ");Serial.println(data);
  String mensajeN = String(data);
  Serial.print(mensajeN);
}
/**********************/

void setup() {
  Serial.begin(MonitorSerial);
  MENSAGE_Inicio();
  CONEXION_WiFi();
  // connect to adafruit io
  DimMode.setCallback(Modo);
  ControlNivelLuz.setCallback(Nivel);
  mqtt.subscribe(&DimMode);
  mqtt.subscribe(&ControlNivelLuz);
  connect();
}
/**********************/
// connect to adafruit io via MQTT
void connect() {
  Serial.print(F("Connecting to Adafruit IO... "));
  int8_t ret;
  while ((ret = mqtt.connect()) != 0) {
    switch (ret) {
      case 1: Serial.println(F("Wrong protocol")); break;
      case 2: Serial.println(F("ID rejected")); break;
      case 3: Serial.println(F("Server unavail")); break;
      case 4: Serial.println(F("Bad user/pass")); break;
      case 5: Serial.println(F("Not authed")); break;
      case 6: Serial.println(F("Failed to subscribe")); break;
      default: Serial.println(F("Connection failed")); break;
    }
    if(ret >= 0)
      mqtt.disconnect();
    Serial.println(F("Retrying connection..."));
    delay(10000);
  }
  Serial.println(F("Adafruit IO Connected!"));
}
/**********************/
void loop() { 
  int t=temp[k];
  int h=hum[k];
  if(k==37){k=0;}
  k = k+1;
  //float t  = 32.6;
  //float h  = 86.66;
  Serial.print("sending -> ");  Serial.println(t);
  Serial.print("sending -> ");  Serial.println(h);
  // ping adafruit io a few times to make sure we remain connected
  if(! mqtt.ping(3)) {
    // reconnect to adafruit io
    if(! mqtt.connected())
      connect();
  }  
  //Publish to Adafruit 
  if (! Temperatura.publish(t)) {Serial.println(F("Failed"));} 
  if (! Humedad.publish(h))     {Serial.println(F("Failed"));}
  else                          {Serial.println(F("Sent!"));}
  mqtt.processPackets(500);
  delay(5000);
}

/**********************/ 

void MENSAGE_Inicio() { 
  Serial.print("Iniciando . . . ");  
}

void CONEXION_WiFi() {  
  digitalWrite(2, LOW);
  WiFi.begin(WIFI_SSID, WIFI_PASS);
    while (WiFi.status() != WL_CONNECTED) {
      delay(700);
      Serial.print("\n Connecting to WiFi...");
    } 

  Serial.print("\n Connected to the WiFi network: ");
  Serial.print(WIFI_SSID);  Serial.print("\n");
  digitalWrite(2, HIGH);
}
